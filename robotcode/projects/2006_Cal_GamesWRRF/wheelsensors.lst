MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include "ifi_default.h"
Error[108]  : Illegal character (/)
                      00001 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00002 * FILE NAME: ifi_default.h
Error[108]  : Illegal character (*)
                      00003 *
Error[108]  : Illegal character (*)
                      00004 * DESCRIPTION: 
Error[108]  : Illegal character (*)
                      00005 *  This file contains important data definitions.              
Error[108]  : Illegal character (*)
                      00006 *
Error[108]  : Illegal character (*)
                      00007 *  DO NOT EDIT THIS FILE!
Error[108]  : Illegal character (*)
                      00008 *******************************************************************************/
                      00009 
                      00010 #ifndef __ifi_default_h_
                      00011 #define __ifi_default_h_
                      00012 
Error[105]  : Cannot open file (Include File "p18cxxx.h" not found)
                      00013 #include <p18cxxx.h>
                      00014 #define UNCHANGEABLE_DEFINITION_AREA 1
                      00015 
                      00016 #ifdef UNCHANGEABLE_DEFINITION_AREA
                      00017 
Error[108]  : Illegal character (/)
                      00018 /*******************************************************************************
Warning[207]: Found label after column 1. (ALIAS)
Error[122]  : Illegal opcode (DEFINITIONS)
                      00019                              ALIAS DEFINITIONS
Error[108]  : Illegal character (*)
                      00020 *******************************************************************************/
Error[108]  : Illegal character (/)
                      00021                            /* DO NOT CHANGE! */
                      00022 
                      00023 #define   DATA_SIZE          30
                      00024 #define   SPI_TRAILER_SIZE   2
                      00025 #define   SPI_XFER_SIZE      DATA_SIZE + SPI_TRAILER_SIZE
                      00026 
                      00027 #define   FALSE             0
                      00028 #define   TRUE              !FALSE
                      00029 
                      00030 #ifdef    _SIMULATOR
                      00031 #define   RESET_VECTOR      0x000
                      00032 #define   HIGH_INT_VECTOR   0x008
                      00033 #define   LOW_INT_VECTOR    0x018
                      00034 #else
                      00035 #define   RESET_VECTOR      0x800
                      00036 #define   HIGH_INT_VECTOR   0x808
                      00037 #define   LOW_INT_VECTOR    0x818
                      00038 #endif
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00039 
                      00040 
Error[108]  : Illegal character (/)
                      00041 /*******************************************************************************
  0000                00042                             VARIABLE DECLARATIONS
Error[108]  : Illegal character (*)
  0000                00043 *******************************************************************************/
Error[108]  : Illegal character (/)
  0000                00044                             /* DO NOT CHANGE! */
Error[108]  : Illegal character (/)
  0000                00045 /* This structure contains important system status information. */
Error[122]  : Illegal opcode (struct)
  0000                00046 typedef struct
Error[108]  : Illegal character ({)
  0000                00047 {
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
  0000                00048   unsigned int  :5;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
  0000                00049   unsigned int  user_display:1;  /* User display enabled = 1, disabled = 0 */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
  0000                00050   unsigned int  autonomous:1;    /* Autonomous enabled = 1, disabled = 0 */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
  0000                00051   unsigned int  disabled:1;      /* Robot disabled = 1, enabled = 0 */
Error[108]  : Illegal character (})
  0000                00052 } modebits;
                      00053 
Error[108]  : Illegal character (/)
                      00054 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00055                             /* DO NOT CHANGE! */
Error[108]  : Illegal character (/)
                      00056 /* This structure allows you to address specific bits of a byte.*/
Error[122]  : Illegal opcode (struct)
                      00057 typedef struct
Error[108]  : Illegal character ({)
                      00058 {
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00059   unsigned int  bit0:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00060   unsigned int  bit1:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00061   unsigned int  bit2:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00062   unsigned int  bit3:1;
Warning[207]: Found label after column 1. (unsigned)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[122]  : Illegal opcode (int)
                      00063   unsigned int  bit4:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00064   unsigned int  bit5:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00065   unsigned int  bit6:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00066   unsigned int  bit7:1;
Error[108]  : Illegal character (})
                      00067 } bitid;
                      00068 
Error[108]  : Illegal character (/)
                      00069 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00070                             /* DO NOT CHANGE! */
Error[108]  : Illegal character (/)
                      00071 /* This structure defines the contents of the data received from the Master
Error[108]  : Illegal character (*)
                      00072  * microprocessor. */
Error[122]  : Illegal opcode (struct)
                      00073 typedef struct  {     /* begin rx_data_record structure */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00074   unsigned char packet_num;
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00075   union
Error[108]  : Illegal character ({)
000000                00076   { 
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00077     bitid bitselect;
Warning[207]: Found label after column 1. (modebits)
Error[122]  : Illegal opcode (mode)
000000                00078     modebits mode;            /*rxdata.rc_mode_byte.mode.(user_display|autonomous|disabled)*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00079     unsigned char allbits;    /*rxdata.rc_mode_byte.allbits*/
Error[108]  : Illegal character (})
000000                00080   } rc_mode_byte;
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00081   union
Error[108]  : Illegal character ({)
000000                00082   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00083     bitid bitselect;          /*rxdata.oi_swA_byte.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000                00084     unsigned char allbits;    /*rxdata.oi_swA_byte.allbits*/
Error[108]  : Illegal character (})
000000                00085   } oi_swA_byte;  
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00086   union
Error[108]  : Illegal character ({)
000000                00087   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00088     bitid bitselect;          /*rxdata.oi_swB_byte.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00089     unsigned char allbits;    /*rxdata.oi_swB_byte.allbits*/
Error[108]  : Illegal character (})
000000                00090   } oi_swB_byte;  
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00091   union
Error[108]  : Illegal character ({)
000000                00092   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00093     bitid bitselect;          /*rxdata.rc_swA_byte.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00094     unsigned char allbits;    /*rxdata.rc_swA_byte.allbits*/
Error[108]  : Illegal character (})
000000                00095   } rc_swA_byte;
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00096   union
Error[108]  : Illegal character ({)
000000                00097   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00098     bitid bitselect;          /*rxdata.rc_swB_byte.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00099     unsigned char allbits;    /*rxdata.rc_swB_byte.allbits*/
Error[108]  : Illegal character (})
000000                00100   } rc_swB_byte;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00101   unsigned char oi_analog01, oi_analog02, oi_analog03, oi_analog04;  /*rxdata.oi_analog01*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00102   unsigned char oi_analog05, oi_analog06, oi_analog07, oi_analog08;         
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00103   unsigned char oi_analog09, oi_analog10, oi_analog11, oi_analog12;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000                00104   unsigned char oi_analog13, oi_analog14, oi_analog15, oi_analog16;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00105   unsigned char rc_main_batt, rc_backup_batt;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00106   unsigned char reserve[8];;
Error[108]  : Illegal character (})
000000                00107 } rx_data_record;
                      00108 
Error[122]  : Illegal opcode (rx_data_record)
                      00109 typedef rx_data_record *rx_data_ptr;
                      00110 
Error[108]  : Illegal character (/)
                      00111 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00112                             /* DO NOT CHANGE! */
Error[108]  : Illegal character (/)
                      00113 /* This structure defines the contents of the data transmitted to the master  
Error[108]  : Illegal character (*)
                      00114  * microprocessor. */
Error[122]  : Illegal opcode (struct)
                      00115 typedef struct  {     /*begin tx_data_record structure*/
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00116   union
Error[108]  : Illegal character ({)
000000                00117   { 
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00118     bitid bitselect;          /*txdata.LED_byte1.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00119     unsigned char data;       /*txdata.LED_byte1.data*/
Error[108]  : Illegal character (})
000000                00120   } LED_byte1;
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00121   union
Error[108]  : Illegal character ({)
000000                00122   { 
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00123     bitid bitselect;          /*txdata.LED_byte2.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00124     unsigned char data;       /*txdata.LED_byte2.data*/
Error[108]  : Illegal character (})
000000                00125   } LED_byte2;
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00126   union
Error[108]  : Illegal character ({)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000                00127   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00128     bitid bitselect;          /*txdata.user_byte1.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00129     unsigned char allbits;    /*txdata.user_byte1.allbits*/
Error[108]  : Illegal character (})
000000                00130   } user_byte1;               /*for OI feedback*/
Warning[207]: Found label after column 1. (union)
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00131   union
Error[108]  : Illegal character ({)
000000                00132   {
Warning[207]: Found label after column 1. (bitid)
Error[122]  : Illegal opcode (bitselect)
000000                00133     bitid bitselect;          /*txdata.user_byte2.bitselect.bit0*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00134     unsigned char allbits;    /*txdata.user_byte2.allbits*/
Error[108]  : Illegal character (})
000000                00135   } user_byte2;               /*for OI feedback*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00136   unsigned char rc_pwm01, rc_pwm02, rc_pwm03, rc_pwm04;   /*txdata.rc_pwm01*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00137   unsigned char rc_pwm05, rc_pwm06, rc_pwm07, rc_pwm08;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00138   unsigned char rc_pwm09, rc_pwm10, rc_pwm11, rc_pwm12;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
000000                00139   unsigned char rc_pwm13, rc_pwm14, rc_pwm15, rc_pwm16;
                      00140 
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00141   unsigned char user_cmd;     /*reserved - for future use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00142   unsigned char cmd_byte1;    /*reserved - Don't use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00143   unsigned char pwm_mask;     /*<EDU> make sure you know how this works before changing*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00144   unsigned char warning_code; /*reserved - Don't use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00145   unsigned char user_byte3;   /*<FRC> break panel byte 3 */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00146   unsigned char user_byte4;   /*<FRC> break panel byte 4 */
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00147   unsigned char user_byte5;   /*<FRC> break panel byte 5 */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00148   unsigned char user_byte6;   /*<FRC> break panel byte 6 */
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00149   unsigned char error_code;   /*reserved - Don't use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00150   unsigned char packetnum;    /*reserved - Don't use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00151   unsigned char current_mode; /*reserved - Don't use*/
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00152   unsigned char control;      /*reserved - Don't use*/
Error[108]  : Illegal character (})
                      00153 } tx_data_record;
                      00154 
Error[122]  : Illegal opcode (tx_data_record)
                      00155 typedef tx_data_record *tx_data_ptr;
                      00156 
                      00157 
Error[108]  : Illegal character (/)
                      00158 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00159                             /* DO NOT CHANGE! */
Error[108]  : Illegal character (/)
                      00160 /* This structure defines some flags which are used by the system. */
                      00161 
Error[122]  : Illegal opcode (struct)
                      00162 typedef struct
Error[108]  : Illegal character ({)
                      00163 {
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00164   unsigned int  NEW_SPI_DATA:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00165   unsigned int  TX_UPDATED:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00166   unsigned int  FIRST_TIME:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00167   unsigned int  TX_BUFFSELECT:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00168   unsigned int  RX_BUFFSELECT:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00169   unsigned int  SPI_SEMAPHORE:1;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00170   unsigned int  :2;
Error[108]  : Illegal character (})
                      00171 } packed_struct;
                      00172 
Error[108]  : Illegal character (/)
                      00173 /******************************************************************************/
                      00174 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (tx_data_record txdata)
  0000                00175 extern tx_data_record txdata; 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (rx_data_record rxdata)
  0000                00176 extern rx_data_record rxdata; 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (packed_struct statusflag)
  0000                00177 extern packed_struct statusflag;
                      00178 
                      00179 #else
                      00180 #error  *** Error - Invalid Default File!
                      00181 #endif
                      00182 
Error[108]  : Illegal character (/)
                      00183 /*******************************************************************************
Warning[207]: Found label after column 1. (FUNCTION)
Error[122]  : Illegal opcode (PROTOTYPES)
                      00184                            FUNCTION PROTOTYPES
Error[108]  : Illegal character (*)
                      00185 *******************************************************************************/
                      00186 
Error[108]  : Illegal character (/)
                      00187 /* These routines reside in ifi_library.lib */
Error[108]  : Illegal character (/)
                      00188 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00189 * FUNCTION NAME: InterruptVectorHigh
Error[108]  : Illegal character (*)
                      00190 * PURPOSE:       This vector jumps to the appropriate high pri. interrupt handler.
Error[108]  : Illegal character (*)
                      00191 * CALLED FROM:   High priority interrupt vector
Error[108]  : Illegal character (*)
                      00192 * ARGUMENTS:     none
Error[108]  : Illegal character (*)
                      00193 * RETURNS:       void
Error[108]  : Illegal character (*)
                      00194 *******************************************************************************/
Error[122]  : Illegal opcode (InterruptHandlerHigh)
                      00195 void InterruptHandlerHigh (void);;
                      00196 
Error[122]  : Illegal opcode (Initialize_Registers)
                      00197 void Initialize_Registers (void);;
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (/)
                      00198 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00199 * FUNCTION NAME: IFI_Initialization
Error[108]  : Illegal character (*)
                      00200 * PURPOSE:       Configure registers and initializes the SPI RX/TX buffers.
Error[108]  : Illegal character (*)
                      00201 * CALLED FROM:   main.c
Error[108]  : Illegal character (*)
                      00202 * ARGUMENTS:     none
Error[108]  : Illegal character (*)
                      00203 * RETURNS:       void
Error[108]  : Illegal character (*)
                      00204 *******************************************************************************/
Error[122]  : Illegal opcode (IFI_Initialization)
                      00205 void IFI_Initialization (void);;
                      00206 
Error[108]  : Illegal character (/)
                      00207 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00208 * FUNCTION NAME: User_Proc_Is_Ready
Error[108]  : Illegal character (*)
                      00209 * PURPOSE:       This routine informs the master processor that all user 
Error[108]  : Illegal character (*)
                      00210 *                initalization has been complete.  The call to this routine must 
Error[108]  : Illegal character (*)
                      00211 *                always be the last line of User_Initialization.  
Error[108]  : Illegal character (*)
                      00212 * CALLED FROM:   user_routines.c
Error[108]  : Illegal character (*)
                      00213 * ARGUMENTS:     none
Error[108]  : Illegal character (*)
                      00214 * RETURNS:       void 
Error[108]  : Illegal character (*)
                      00215 *******************************************************************************/
Error[122]  : Illegal opcode (User_Proc_Is_Ready)
                      00216 void User_Proc_Is_Ready (void);;
                      00217 
Error[108]  : Illegal character (/)
                      00218 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00219 * FUNCTION NAME: Putdata
Error[108]  : Illegal character (*)
                      00220 * PURPOSE:       Fill the transmit buffer with data to send out to the master 
Error[108]  : Illegal character (*)
                      00221 *                microprocessor. This routine takes 23 us to complete.
Error[108]  : Illegal character (*)
                      00222 * CALLED FROM:   user_routines(_fast).c
Error[108]  : Illegal character (*)
                      00223 * ARGUMENTS:     
Error[108]  : Illegal character (*)
                      00224 *     Argument       Type           IO   Description
Error[108]  : Illegal character (*)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00225 *     --------       -----------    --   -----------
Error[108]  : Illegal character (*)
                      00226 *          ptr       tx_data_ptr    I    pointer to the transmit buffer
Error[108]  : Illegal character (*)
                      00227 * RETURNS:       void
Error[108]  : Illegal character (*)
                      00228 *******************************************************************************/
Error[122]  : Illegal opcode (Putdata)
                      00229 void Putdata(tx_data_ptr ptr);;
                      00230 
Error[108]  : Illegal character (/)
                      00231 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00232 * FUNCTION NAME: Getdata
Error[108]  : Illegal character (*)
                      00233 * PURPOSE:       Retrieve data from the SPI receive buffer sent by the master 
Error[108]  : Illegal character (*)
                      00234 *                microprocessor.  This routine takes 14.8 us to complete.
Error[108]  : Illegal character (*)
                      00235 * CALLED FROM:   user_routines(_fast).c
Error[108]  : Illegal character (*)
                      00236 * ARGUMENTS:     
Error[108]  : Illegal character (*)
                      00237 *     Argument       Type           IO   Description
Error[108]  : Illegal character (*)
                      00238 *     --------       -----------    --   -----------
Error[108]  : Illegal character (*)
                      00239 *          ptr       rx_data_ptr    I    pointer to the receive buffer
Error[108]  : Illegal character (*)
                      00240 * RETURNS:       void
Error[108]  : Illegal character (*)
                      00241 *******************************************************************************/
Error[122]  : Illegal opcode (Getdata)
                      00242 void Getdata(rx_data_ptr ptr);;
                      00243 
Error[108]  : Illegal character (/)
                      00244 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00245 * FUNCTION NAME: Setup_PWM_Output_Type
Error[108]  : Illegal character (*)
                      00246 * PURPOSE:       
Error[108]  : Illegal character (*)
                      00247 * CALLED FROM:   user_routines.c
Error[108]  : Illegal character (*)
                      00248 * ARGUMENTS:     
Error[108]  : Illegal character (*)
                      00249 *     Argument       Type           IO   Description
Error[108]  : Illegal character (*)
                      00250 *     --------       -----------    --   -----------
Error[108]  : Illegal character (*)
                      00251 *     pwmSpec1       int            I    pwm13 type definition (IFI_PWM or USER_CCP)
Error[108]  : Illegal character (*)
                      00252 *     pwmSpec2       int            I    pwm14 type definition (IFI_PWM or USER_CCP)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (*)
                      00253 *     pwmSpec3       int            I    pwm15 type definition (IFI_PWM or USER_CCP)
Error[108]  : Illegal character (*)
                      00254 *     pwmSpec4       int            I    pwm16 type definition (IFI_PWM or USER_CCP)
Error[108]  : Illegal character (*)
                      00255 * RETURNS:       void
Error[108]  : Illegal character (*)
                      00256 *******************************************************************************/
Error[122]  : Illegal opcode (Setup_PWM_Output_Type)
                      00257 void Setup_PWM_Output_Type(int pwmSpec1,int pwmSpec2,int pwmSpec3,int pwmSpec4);;
                      00258 
                      00259 #endif
                      00260 
Error[108]  : Illegal character (/)
                      00261 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00262 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00263 /******************************************************************************/
                      00002 #include "ifi_aliases.h"
Error[108]  : Illegal character (/)
                      00001 /********************************************************************************
Error[108]  : Illegal character (*)
                      00002 * FILE NAME: ifi_aliases.h <FRC VERSION>
Error[108]  : Illegal character (*)
                      00003 *
Error[108]  : Illegal character (*)
                      00004 * DESCRIPTION: 
Error[108]  : Illegal character (*)
                      00005 *  This file contains common macros (known as aliases in PBASIC) for the 
Error[108]  : Illegal character (*)
                      00006 *  I/O pins of the Robot Controller and elements in the data sent between the 
Error[108]  : Illegal character (*)
                      00007 *  User processor and the Master processor.
Error[108]  : Illegal character (*)
                      00008 *  
Error[108]  : Illegal character (*)
                      00009 *  If you want to create your own macros, do so in the designated section of 
Error[108]  : Illegal character (*)
                      00010 *  the user_routines.h file.
Error[108]  : Illegal character (*)
                      00011 *  
Error[108]  : Illegal character (*)
                      00012 *  DO NOT EDIT THIS FILE!
Error[108]  : Illegal character (*)
                      00013 ********************************************************************************/
                      00014 
                      00015 #ifndef __ifi_aliases_h_
                      00016 #define __ifi_aliases_h_
                      00017 
Error[105]  : Cannot open file (Include File "adc.h" not found)
                      00018 #include <adc.h>
                      00019 
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (/)
                      00020 /* PWM Type Definitions used in Setup_PWM_Output_Type(...) */
                      00021 #define IFI_PWM   0     /* Standard IFI PWM output generated with Generate_PWM(...) */
                      00022 #define USER_CCP  1     /* User can use PWM pin as digital I/O or CCP pin. */
                      00023 
Error[108]  : Illegal character (/)
                      00024 /*
Error[108]  : Illegal character (*)
                      00025  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00026  *---------- Aliases for each OI analog input ---------------------------------------------------------
Error[108]  : Illegal character (*)
                      00027  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00028  *  Below are aliases for the analog inputs located on the Operator Interface.
Error[108]  : Illegal character (*)
                      00029  */
                      00030 #define p1_y        rxdata.oi_analog01
                      00031 #define p2_y        rxdata.oi_analog02
                      00032 #define p3_y        rxdata.oi_analog03
                      00033 #define p4_y        rxdata.oi_analog04
                      00034 #define p1_x        rxdata.oi_analog05
                      00035 #define p2_x        rxdata.oi_analog06
                      00036 #define p3_x        rxdata.oi_analog07
                      00037 #define p4_x        rxdata.oi_analog08
                      00038 #define p1_wheel    rxdata.oi_analog09
                      00039 #define p2_wheel    rxdata.oi_analog10
                      00040 #define p3_wheel    rxdata.oi_analog11
                      00041 #define p4_wheel    rxdata.oi_analog12
                      00042 #define p1_aux      rxdata.oi_analog13
                      00043 #define p2_aux      rxdata.oi_analog14
                      00044 #define p3_aux      rxdata.oi_analog15
                      00045 #define p4_aux      rxdata.oi_analog16
                      00046 
Error[108]  : Illegal character (/)
                      00047 /*
Error[108]  : Illegal character (*)
                      00048  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00049  *---------- Aliases for each OI switch input ---------------------------------------------------------
Error[108]  : Illegal character (*)
                      00050  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00051  *  Below are aliases for the digital inputs located on the Operator Interface.
Error[108]  : Illegal character (*)
                      00052  *  Ports 1 & 3 have their inputs duplicated in ports 4 & 2 respectively.  The 
Error[108]  : Illegal character (*)
                      00053  *  inputs from ports 1 & 3 may be disabled via the 'Disable' dip switch 
Error[108]  : Illegal character (*)
                      00054  *  located on the Operator Interface.  See Users Manual for details.
Error[108]  : Illegal character (*)
                      00055  */
                      00056 #define p1_sw_trig  rxdata.oi_swA_byte.bitselect.bit0 /* Joystick Trigger Button, same as Port4 pin5 */
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00057 #define p1_sw_top   rxdata.oi_swA_byte.bitselect.bit1 /* Joystick Top Button,     same as Port4 pin8 */
                      00058 #define p1_sw_aux1  rxdata.oi_swA_byte.bitselect.bit2 /* Aux input,               same as Port4 pin9 */
                      00059 #define p1_sw_aux2  rxdata.oi_swA_byte.bitselect.bit3 /* Aux input,               same as Port4 pin15*/
                      00060 
                      00061 #define p3_sw_trig  rxdata.oi_swA_byte.bitselect.bit4 /* Joystick Trigger Button, same as Port2 pin5 */
                      00062 #define p3_sw_top   rxdata.oi_swA_byte.bitselect.bit5 /* Joystick Top Button,     same as Port2 pin8 */
                      00063 #define p3_sw_aux1  rxdata.oi_swA_byte.bitselect.bit6 /* Aux input,               same as Port2 pin9 */
                      00064 #define p3_sw_aux2  rxdata.oi_swA_byte.bitselect.bit7 /* Aux input,               same as Port2 pin15*/
                      00065 
                      00066 #define p2_sw_trig  rxdata.oi_swB_byte.bitselect.bit0 /* Joystick Trigger Button*/
                      00067 #define p2_sw_top   rxdata.oi_swB_byte.bitselect.bit1 /* Joystick Top Button*/
                      00068 #define p2_sw_aux1  rxdata.oi_swB_byte.bitselect.bit2 /* Aux input*/
                      00069 #define p2_sw_aux2  rxdata.oi_swB_byte.bitselect.bit3 /* Aux input*/
                      00070 
                      00071 #define p4_sw_trig  rxdata.oi_swB_byte.bitselect.bit4 /* Joystick Trigger Button*/
                      00072 #define p4_sw_top   rxdata.oi_swB_byte.bitselect.bit5 /* Joystick Top Button*/
                      00073 #define p4_sw_aux1  rxdata.oi_swB_byte.bitselect.bit6 /* Aux input*/
                      00074 #define p4_sw_aux2  rxdata.oi_swB_byte.bitselect.bit7 /* Aux input*/
                      00075 
Error[108]  : Illegal character (/)
                      00076 /*
Error[108]  : Illegal character (*)
                      00077  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00078  *---------- Aliases for DIGITAL IN/OUT connectors ----------------------------------------------------
Error[108]  : Illegal character (*)
                      00079  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00080  *  Below are aliases for the digital I/O located on the Robot Controller.
Error[108]  : Illegal character (*)
                      00081  *  They can be configured to be either Inputs or Outputs.
Error[108]  : Illegal character (*)
                      00082  */
                      00083 
                      00084 #define INPUT   1
                      00085 #define OUTPUT  0
                      00086 
Error[108]  : Illegal character (/)
                      00087 /* Used in User_Initialization routine in user_routines.c file. */
Error[108]  : Illegal character (/)
                      00088 /* Used to set pins as digital INPUTS or digital OUTPUTS. */
                      00089 #define digital_io_01   TRISBbits.TRISB2
                      00090 #define digital_io_02   TRISBbits.TRISB3
                      00091 #define digital_io_03   TRISBbits.TRISB4
                      00092 #define digital_io_04   TRISBbits.TRISB5
                      00093 #define digital_io_05   TRISBbits.TRISB6
                      00094 #define digital_io_06   TRISBbits.TRISB7
                      00095 #define digital_io_07   TRISHbits.TRISH0
                      00096 #define digital_io_08   TRISHbits.TRISH1
                      00097 #define digital_io_09   TRISHbits.TRISH2
                      00098 #define digital_io_10   TRISHbits.TRISH3
                      00099 #define digital_io_11   TRISJbits.TRISJ1
                      00100 #define digital_io_12   TRISJbits.TRISJ2
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00101 #define digital_io_13   TRISJbits.TRISJ3
                      00102 #define digital_io_14   TRISCbits.TRISC0
                      00103 #define digital_io_15   TRISJbits.TRISJ4
                      00104 #define digital_io_16   TRISJbits.TRISJ5
                      00105 #define digital_io_17   TRISJbits.TRISJ6
                      00106 #define digital_io_18   TRISJbits.TRISJ7
                      00107 
Error[108]  : Illegal character (/)
                      00108 /* Aliases used to read the pins when used as INPUTS. */
                      00109 #define rc_dig_in01     PORTBbits.RB2   /* external interrupt RB2/INT2      */
                      00110 #define rc_dig_in02     PORTBbits.RB3   /* external interrupt RB3/INT3      */
                      00111 #define rc_dig_in03     PORTBbits.RB4   /* external interrupt-on-change RB4 */
                      00112 #define rc_dig_in04     PORTBbits.RB5   /* external interrupt-on-change RB5 */
                      00113 #define rc_dig_in05     PORTBbits.RB6   /* external interrupt-on-change RB6 */
                      00114 #define rc_dig_in06     PORTBbits.RB7   /* external interrupt-on-change RB7 */
                      00115 #define rc_dig_in07     PORTHbits.RH0
                      00116 #define rc_dig_in08     PORTHbits.RH1
                      00117 #define rc_dig_in09     PORTHbits.RH2
                      00118 #define rc_dig_in10     PORTHbits.RH3
                      00119 #define rc_dig_in11     PORTJbits.RJ1
                      00120 #define rc_dig_in12     PORTJbits.RJ2
                      00121 #define rc_dig_in13     PORTJbits.RJ3
                      00122 #define rc_dig_in14     PORTCbits.RC0
                      00123 #define rc_dig_in15     PORTJbits.RJ4
                      00124 #define rc_dig_in16     PORTJbits.RJ5
                      00125 #define rc_dig_in17     PORTJbits.RJ6
                      00126 #define rc_dig_in18     PORTJbits.RJ7
                      00127 
Error[108]  : Illegal character (/)
                      00128 /* Aliases used to drive the pins when used as OUTPUTS. */
                      00129 #define rc_dig_out01    LATBbits.LATB2
                      00130 #define rc_dig_out02    LATBbits.LATB3
                      00131 #define rc_dig_out03    LATBbits.LATB4
                      00132 #define rc_dig_out04    LATBbits.LATB5
                      00133 #define rc_dig_out05    LATBbits.LATB6
                      00134 #define rc_dig_out06    LATBbits.LATB7
                      00135 #define rc_dig_out07    LATHbits.LATH0
                      00136 #define rc_dig_out08    LATHbits.LATH1
                      00137 #define rc_dig_out09    LATHbits.LATH2
                      00138 #define rc_dig_out10    LATHbits.LATH3
                      00139 #define rc_dig_out11    LATJbits.LATJ1
                      00140 #define rc_dig_out12    LATJbits.LATJ2
                      00141 #define rc_dig_out13    LATJbits.LATJ3
                      00142 #define rc_dig_out14    LATCbits.LATC0
                      00143 #define rc_dig_out15    LATJbits.LATJ4
                      00144 #define rc_dig_out16    LATJbits.LATJ5
                      00145 #define rc_dig_out17    LATJbits.LATJ6
                      00146 #define rc_dig_out18    LATJbits.LATJ7
                      00147 
Error[108]  : Illegal character (/)
                      00148 /*
Error[108]  : Illegal character (*)
                      00149  *-----------------------------------------------------------------------------------------------------
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (*)
                      00150  *---------- Aliases for PWM OUTPUTS ------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00151  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00152  *  Below are aliases for the PWM OUTPUTS located on the Robot Controller.  
Error[108]  : Illegal character (*)
                      00153  */
                      00154 #define pwm01           txdata.rc_pwm01
                      00155 #define pwm02           txdata.rc_pwm02
                      00156 #define pwm03           txdata.rc_pwm03
                      00157 #define pwm04           txdata.rc_pwm04
                      00158 #define pwm05           txdata.rc_pwm05
                      00159 #define pwm06           txdata.rc_pwm06
                      00160 #define pwm07           txdata.rc_pwm07
                      00161 #define pwm08           txdata.rc_pwm08
                      00162 #define pwm09           txdata.rc_pwm09
                      00163 #define pwm10           txdata.rc_pwm10
                      00164 #define pwm11           txdata.rc_pwm11
                      00165 #define pwm12           txdata.rc_pwm12
                      00166 #define pwm13           txdata.rc_pwm13
                      00167 #define pwm14           txdata.rc_pwm14
                      00168 #define pwm15           txdata.rc_pwm15
                      00169 #define pwm16           txdata.rc_pwm16
                      00170 
Error[108]  : Illegal character (/)
                      00171 /*
Error[108]  : Illegal character (*)
                      00172  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00173  *---------- Aliases for RELAY OUTPUTS connectors ----------------------------------------------------
Error[108]  : Illegal character (*)
                      00174  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00175  *  Below are aliases for the relay outputs located on the Robot Controller.  
Error[108]  : Illegal character (*)
                      00176  *  NOTE: The REV/FWD labels on the 2004 Full-size Robot Controllers are swapped.
Error[108]  : Illegal character (*)
                      00177  */
                      00178 #define relay1_fwd      LATEbits.LATE0
                      00179 #define relay1_rev      LATDbits.LATD0
                      00180 #define relay2_fwd      LATEbits.LATE1
                      00181 #define relay2_rev      LATDbits.LATD1
                      00182 #define relay3_fwd      LATEbits.LATE2
                      00183 #define relay3_rev      LATDbits.LATD2
                      00184 #define relay4_fwd      LATEbits.LATE3
                      00185 #define relay4_rev      LATDbits.LATD3
                      00186 #define relay5_fwd      LATEbits.LATE4
                      00187 #define relay5_rev      LATDbits.LATD4
                      00188 #define relay6_fwd      LATEbits.LATE5
                      00189 #define relay6_rev      LATDbits.LATD5
                      00190 #define relay7_fwd      LATEbits.LATE6
                      00191 #define relay7_rev      LATDbits.LATD6
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00192 #define relay8_fwd      LATJbits.LATJ0
                      00193 #define relay8_rev      LATDbits.LATD7
                      00194 
Error[108]  : Illegal character (/)
                      00195 /*
Error[108]  : Illegal character (*)
                      00196  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00197  *---------- Aliases for ANALOG INPUTS connectors -----------------------------------------------------
Error[108]  : Illegal character (*)
                      00198  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00199  *  Below are aliases for reading an analog voltage on the ANALOG INPUTS
Error[108]  : Illegal character (*)
                      00200  *  using the Get_Analog_Value() function.
Error[108]  : Illegal character (*)
                      00201  */
                      00202 #define rc_ana_in01     ADC_CH0
                      00203 #define rc_ana_in02     ADC_CH1
                      00204 #define rc_ana_in03     ADC_CH2
                      00205 #define rc_ana_in04     ADC_CH3
                      00206 #define rc_ana_in05     ADC_CH4
                      00207 #define rc_ana_in06     ADC_CH5
                      00208 #define rc_ana_in07     ADC_CH6
                      00209 #define rc_ana_in08     ADC_CH7
                      00210 #define rc_ana_in09     ADC_CH8
                      00211 #define rc_ana_in10     ADC_CH9
                      00212 #define rc_ana_in11     ADC_CH10
                      00213 #define rc_ana_in12     ADC_CH11
                      00214 #define rc_ana_in13     ADC_CH12
                      00215 #define rc_ana_in14     ADC_CH13
                      00216 #define rc_ana_in15     ADC_CH14
                      00217 #define rc_ana_in16     ADC_CH15
                      00218 
                      00219 #define SIXTEEN_ANALOG      ADC_16ANA   /* All analog */
                      00220 
Error[108]  : Illegal character (/)
                      00221 /*
Error[108]  : Illegal character (*)
                      00222  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00223  *---------- Aliases for the ROBOT FEEDBACK LEDs ------------------------------------------------------
Error[108]  : Illegal character (*)
                      00224  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00225  *  Below are aliases for the ROBOT FEEDBACK LEDs located on the Operator Interface.  
Error[108]  : Illegal character (*)
                      00226  */
                      00227 #define User_Mode_byte  txdata.LED_byte1.data
                      00228 
                      00229 #define Pwm1_green      txdata.LED_byte1.bitselect.bit0
                      00230 #define Pwm1_red        txdata.LED_byte1.bitselect.bit1 
                      00231 #define Pwm2_green      txdata.LED_byte1.bitselect.bit2
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00232 #define Pwm2_red        txdata.LED_byte1.bitselect.bit3 
                      00233 #define Relay1_red      txdata.LED_byte1.bitselect.bit4 
                      00234 #define Relay1_green    txdata.LED_byte1.bitselect.bit5
                      00235 #define Relay2_red      txdata.LED_byte1.bitselect.bit6 
                      00236 #define Relay2_green    txdata.LED_byte1.bitselect.bit7
                      00237 
                      00238 #define Switch1_LED     txdata.LED_byte2.bitselect.bit0
                      00239 #define Switch2_LED     txdata.LED_byte2.bitselect.bit1
                      00240 #define Switch3_LED     txdata.LED_byte2.bitselect.bit2
                      00241 
                      00242 #define User_Byte1      txdata.user_byte1.allbits
                      00243 #define User_Byte2      txdata.user_byte2.allbits
                      00244 #define User_Byte3      txdata.user_byte3   /* This byte is now used for breaker panel byte 3 */
                      00245 #define User_Byte4      txdata.user_byte4   /* This byte is now used for breaker panel byte 4 */
                      00246 #define User_Byte5      txdata.user_byte5   /* This byte is now used for breaker panel byte 5 */
                      00247 #define User_Byte6      txdata.user_byte6   /* This byte is now used for breaker panel byte 6 */
                      00248 
Error[108]  : Illegal character (/)
                      00249 /*
Error[108]  : Illegal character (*)
                      00250  *-------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00251  *---------- Aliases for CCP pins (PWM OUTPUTS 13-16 connectors) ----------------
Error[108]  : Illegal character (*)
                      00252  *-------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00253  *  Below are aliases for the four PWM OUTPUT pins which can be configured for 
Error[108]  : Illegal character (*)
                      00254  *  use as digital outputs by setting them to USER_CCP type.  
Error[108]  : Illegal character (*)
                      00255  *  They are CCP pins with special Compare and PWM features as detailed in the 
Error[108]  : Illegal character (*)
                      00256  *  PIC18FXX20 Data Sheet on page 149.  They have output buffers which make it 
Error[108]  : Illegal character (*)
                      00257  *  impossible to use them as inputs, so they cannot be used in Capture mode.
Error[108]  : Illegal character (*)
                      00258  *
Error[108]  : Illegal character (*)
                      00259  *   The pin mapping is as follows:
Error[108]  : Illegal character (*)
                      00260  *   PWM OUT 13 -> CCP2
Error[108]  : Illegal character (*)
                      00261  *   PWM OUT 14 -> CCP3
Error[108]  : Illegal character (*)
                      00262  *   PWM OUT 15 -> CCP4
Error[108]  : Illegal character (*)
                      00263  *   PWM OUT 16 -> CCP5 
Error[108]  : Illegal character (*)
                      00264  */
Error[108]  : Illegal character (/)
                      00265 /* To set the direction (INPUT or OUTPUT) of the pins you use these aliases. */
                      00266 #define IO_CCP2         TRISEbits.TRISE7
                      00267 #define IO_CCP3         TRISGbits.TRISG0
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00268 #define IO_CCP4         TRISGbits.TRISG3
                      00269 #define IO_CCP5         TRISGbits.TRISG4
                      00270 
Error[108]  : Illegal character (/)
                      00271 /* When using them as inputs you read the values with these aliases. */
                      00272 #define IN_CCP2         PORTEbits.RE7
                      00273 #define IN_CCP3         PORTGbits.RG0
                      00274 #define IN_CCP4         PORTGbits.RG3
                      00275 #define IN_CCP5         PORTGbits.RG4
                      00276 
Error[108]  : Illegal character (/)
                      00277 /* When using them as outputs you drive a value with these aliases. */
                      00278 #define OUT_CCP2        LATEbits.LATE7
                      00279 #define OUT_CCP3        LATGbits.LATG0
                      00280 #define OUT_CCP4        LATGbits.LATG3
                      00281 #define OUT_CCP5        LATGbits.LATG4
                      00282 
Error[108]  : Illegal character (/)
                      00283 /*
Error[108]  : Illegal character (*)
                      00284  *-------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00285  *---------- Aliases for TTL connectors (serial port 2) -------------------------
Error[108]  : Illegal character (*)
                      00286  *-------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00287  *  Below are aliases for the second serial port (USART2) pins labeled TTL.
Error[108]  : Illegal character (*)
                      00288  */
                      00289 #define usart2_TX       LATGbits.LATG1
                      00290 #define usart2_RX       PORTGbits.RG2
                      00291 
Error[108]  : Illegal character (/)
                      00292 /*
Error[108]  : Illegal character (*)
                      00293  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00294  *---------- Aliases for Battery Voltage bytes --------------------------------------------------------
Error[108]  : Illegal character (*)
                      00295  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00296  * Formula to calculate voltage in volts: 
Error[108]  : Illegal character (*)
                      00297  *     current_voltage = battery_voltage * 0.038 + 0.05; 
Error[108]  : Illegal character (*)
                      00298  */
                      00299 
                      00300 #define battery_voltage     rxdata.rc_main_batt*15.64/256
                      00301 #define backup_voltage      rxdata.rc_backup_batt*15.64/256
                      00302 
Error[108]  : Illegal character (/)
                      00303 /*
Error[108]  : Illegal character (*)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00304  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00305  *---------- Aliases for User Modes  ------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00306  *-----------------------------------------------------------------------------------------------------
Error[108]  : Illegal character (*)
                      00307  * These bits tell you what mode your robot is currently in.
Error[108]  : Illegal character (*)
                      00308  *     1 = in <X> mode; 0 = not in <X> mode
Error[108]  : Illegal character (*)
                      00309  */
                      00310 
                      00311 #define user_display_mode   rxdata.rc_mode_byte.mode.user_display
                      00312 #define autonomous_mode     rxdata.rc_mode_byte.mode.autonomous
                      00313 #define disabled_mode       rxdata.rc_mode_byte.mode.disabled
                      00314 
                      00315 #endif
                      00316 
Error[108]  : Illegal character (/)
                      00317 /*---------------------------------------------------------------------------------------------------*/
Error[108]  : Illegal character (/)
                      00318 /*---------------------------------------------------------------------------------------------------*/
Error[108]  : Illegal character (/)
                      00319 /*---------------------------------------------------------------------------------------------------*/
                      00003 #include "ifi_utilities.h"
Error[108]  : Illegal character (/)
                      00001 /*******************************************************************************
Error[108]  : Illegal character (*)
                      00002 * FILE NAME: ifi_utilities.h
Error[108]  : Illegal character (*)
                      00003 *
Error[108]  : Illegal character (*)
                      00004 * DESCRIPTION: 
Error[108]  : Illegal character (*)
                      00005 *  This is the include file which corresponds to ifi_utilities.c
Error[108]  : Illegal character (*)
                      00006 *  It contains some aliases and function prototypes used in that file.
Error[108]  : Illegal character (*)
                      00007 *
Error[108]  : Illegal character (*)
                      00008 * USAGE:
Error[108]  : Illegal character (*)
                      00009 *  This file should not be modified by the user.
Error[108]  : Illegal character (*)
                      00010 *  DO NOT EDIT THIS FILE!
Error[108]  : Illegal character (*)
                      00011 *******************************************************************************/
                      00012 
                      00013 #ifndef __ifi_utilities_h_
                      00014 #define __ifi_utilities_h_
                      00015 
Error[121]  : Illegal label (_SNOOP_ON_COM1    /* FOR FUTURE USE */)
                      00016 #ifdef _SNOOP_ON_COM1    /* FOR FUTURE USE */
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00017 #define RXINTF              PIR3bits.RC2IF
                      00018 #define RXINTE              PIE3bits.RC2IE
                      00019 #define TXINTF              PIR3bits.TX2IF 
                      00020 #define TXINTE              PIE3bits.TX2IE
                      00021 #define RCSTAbits           RCSTA2bits
                      00022 #define RCSTA               RCSTA2
                      00023 #define TXSTA               TXSTA2
                      00024 #define TXREG               TXREG2
                      00025 #define RCREG               RCREG2
                      00026 #define SPBRG               SPBRG2
                      00027 #define OpenUSART           Open2USART
                      00028 #else
                      00029 #define RXINTF              PIR1bits.RCIF
                      00030 #define RXINTE              PIE1bits.RCIE
                      00031 #define TXINTF              PIR1bits.TXIF 
                      00032 #define TXINTE              PIE1bits.TXIE
                      00033 #define RCSTAbits           RCSTA1bits
                      00034 #define RCSTA               RCSTA1
                      00035 #define TXSTA               TXSTA1
                      00036 #define TXREG               TXREG1
                      00037 #define RCREG               RCREG1
                      00038 #define SPBRG               SPBRG1
                      00039 #define OpenUSART           Open1USART
                      00040 #endif
                      00041 
Error[108]  : Illegal character (/)
                      00042 /*******************************************************************************
Error[135]  : Macro name missing
                      00043                              MACRO DEFINITIONS
Error[108]  : Illegal character (*)
                      00044 *******************************************************************************/
                      00045 
Error[122]  : Illegal opcode (enum)
                      00046 typedef enum
Error[108]  : Illegal character ({)
                      00047 {
Warning[207]: Found label after column 1. (baud_19)
Error[108]  : Illegal character (,)
  00000000            00048   baud_19 = 128,
Warning[207]: Found label after column 1. (baud_38)
Error[108]  : Illegal character (,)
  00000000            00049   baud_38 = 64,
Warning[207]: Found label after column 1. (baud_56)
Error[108]  : Illegal character (,)
  00000000            00050   baud_56 = 42,
Warning[207]: Found label after column 1. (baud_115)
  00000021            00051   baud_115 = 21
Error[108]  : Illegal character (})
  00000021            00052 } SERIAL_SPEED;
                      00053 
                      00054 
Error[108]  : Illegal character (/)
                      00055 /*******************************************************************************
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (FUNCTION)
Error[122]  : Illegal opcode (PROTOTYPES)
                      00056                            FUNCTION PROTOTYPES
Error[108]  : Illegal character (*)
                      00057 *******************************************************************************/
                      00058 
Error[122]  : Illegal opcode (Hex_output)
                      00059 void Hex_output(unsigned char temp);  ;  /* located in ifi_library.lib */
                      00060 
                      00061 #ifdef _FRC_BOARD
                      00062   /* located in ifi_library.lib */
                      00063 void Generate_Pwms(unsigned char pwm_13,unsigned char pwm_14,
                      00064                    unsigned char pwm_15,unsigned char pwm_16);;
                      00065 #else
Error[108]  : Illegal character (/)
                      00066   /* located in ifi_library.lib */
Error[122]  : Illegal opcode (Generate_Pwms)
                      00067 void Generate_Pwms(unsigned char pwm_1,unsigned char pwm_2,
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00068                    unsigned char pwm_3,unsigned char pwm_4,
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00069                    unsigned char pwm_5,unsigned char pwm_6,
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00070                    unsigned char pwm_7,unsigned char pwm_8);;
                      00071 #endif
                      00072 
Error[108]  : Illegal character (/)
                      00073 /* These routines reside in ifi_utilities.c */
Error[122]  : Illegal opcode (Wait4TXEmpty)
                      00074 void Wait4TXEmpty(void);;
Error[122]  : Illegal opcode (PrintByte)
                      00075 void PrintByte(unsigned char odata);;
Error[122]  : Illegal opcode (PrintWord)
                      00076 void PrintWord(unsigned int odata);;
Error[122]  : Illegal opcode (DisplayBufr)
                      00077 void DisplayBufr(unsigned char *bufr);;
Error[122]  : Illegal opcode (PacketNum_Check)
                      00078 void PacketNum_Check(void);;
Error[122]  : Illegal opcode (Initialize_Serial_Comms)
                      00079 void Initialize_Serial_Comms (void);;
Error[122]  : Illegal opcode (Set_Number_of_Analog_Channels)
                      00080 void Set_Number_of_Analog_Channels (unsigned char number_of_channels);;
Error[122]  : Illegal opcode (int)
                      00081 unsigned int Get_Analog_Value(unsigned char channel);;
                      00082 
Error[125]  : Illegal condition (ENDIF)
                      00083 #endif
                      00084 
                      00085 
Error[108]  : Illegal character (/)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00086 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00087 /******************************************************************************/
Error[108]  : Illegal character (/)
                      00088 /******************************************************************************/
                      00004 #include "utilities.h"
Error[108]  : Illegal character (/)
                      00001 /********************************************************************************
Error[108]  : Illegal character (*)
                      00002 * FILE NAME: utilities.h <FRC VERSION>
                      00003 
Error[108]  : Illegal character (*)
                      00004 * DESCRIPTION: 
Error[108]  : Illegal character (*)
                      00005 *  This file ...
Error[108]  : Illegal character (*)
                      00006 *
Error[108]  : Illegal character (*)
                      00007 ********************************************************************************/
                      00008 #ifndef utilities_h_
                      00009 #define utilities_h_
                      00010 
                      00011 
Error[108]  : Illegal character ({)
                      00012 enum { kRight, kLeft };;
Error[108]  : Illegal character ({)
                      00013 enum { kLowGear, kHighGear };;
                      00014 
                      00015 #define kNeutral 127u
                      00016 
                      00017 
                      00018 #define kPI     3.14159
                      00019 #define kAxleLengthInch 28
                      00020 #define kEncoderTicksPerFt      81.49
                      00021 #define kEncoderTicksPerFt256   kEncoderTicksPerFt*256L //use care to wrap in '()' when dividing!
                      00022 
Error[108]  : Illegal character (/)
                      00023         //about 3.1 ticks per degree -- very sensitive!
                      00024 #define kTurnTicksPerDegree (long)kAxleLengthInch*128L*2/(360*6)
                      00025 #define kTurnTicksPerDegree256 (long)(kAxleLengthInch*256*128L*2/(360*6)
                      00026 
                      00027 
Error[122]  : Illegal opcode (testArea)
                      00028 void testArea(void);;
                      00029 
Error[108]  : Illegal character (/)
                      00030 //mSign(A) returns the sign +/-1 or zero of argument 'A'
                      00031 #define mSign(A) ((A)>0 ? 1 : ((A)<0 ? -1:0))
                      00032 #define mAbsolute(A) ((A)<0?-(A):(A))
                      00033 #define mAbsDiff(A,B) ((A)>(B)?((A)-(B)):((B)-(A)))
                      00034 #define mModPowerOf2(AAA,pwr2) ((AAA > 0) ? ((1L<<pwr2)-1)&(AAA) : -(((1L<<pwr2)-1)&(-(AAA))))
                      00035 #define mIsPowerOf2(AAA) (0==(((AAA)-1)&(AAA)))
                      00036 
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00037 #define mLimitRange(number,low,high) do {\
Error[113]  : Symbol not previously defined (number)
Error[128]  : Missing argument(s)
                      00038         if ((number)>high) (number)=(high);\;\
                      00039         else if ((number)<low) (number)=(low); ; } while (0) 
                      00040 
                      00041 #define mDivideByPowerOf2(AAA,pwr2) ((AAA)>=0 ? ((AAA)>>(pwr2)) : -(-(AAA)>>(pwr2)))
                      00042 #define mDivideBy2(AAA) mDivideByPowerOf2(AAA,1)
                      00043 #define mDivideBy4(AAA) mDivideByPowerOf2(AAA,2)
                      00044 #define mDivideBy8(AAA) mDivideByPowerOf2(AAA,3)
                      00045 #define mDivideBy16(AAA) mDivideByPowerOf2(AAA,4)
                      00046 #define mDivideBy32(AAA) mDivideByPowerOf2(AAA,5)
                      00047 #define mDivideBy64(AAA) mDivideByPowerOf2(AAA,6)
                      00048 #define mDivideBy128(AAA) mDivideByPowerOf2(AAA,7)
                      00049 #define mDivideBy256(AAA) mDivideByPowerOf2(AAA,8)
                      00050 
Error[122]  : Illegal opcode (struct)
                      00051 typedef struct { long left, right; } LeftRightPair;
                      00052 
Error[150]  : Labels must be defined in a code or data section when making an object file
000000                00053 typedef
Warning[207]: Found label after column 1. (union)
Error[108]  : Illegal character ({)
000000                00054         union {
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (long)
000000                00055                 unsigned long ts;
Warning[207]: Found label after column 1. (struct)
Error[108]  : Illegal character ({)
000000                00056                 struct {
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
000000                00057                         unsigned int tsL;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
000000                00058                         unsigned int tsH;
Error[108]  : Illegal character (})
000000                00059                 };;
Error[108]  : Illegal character (})
000000                00060 } timestamp;
                      00061 
                      00062 
Error[122]  : Illegal opcode (struct)
                      00063 typedef struct {
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (t0)
                      00064         timestamp t0;   //most recent
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (t1)
                      00065         timestamp t1;   //one step earlier
                      00066 
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (newdata)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00067         unsigned newdata:1;
                      00068 
Error[108]  : Illegal character (/)
                      00069 //      timestamp d0;   //  (t0-t2) /2/64
Error[108]  : Illegal character (/)
                      00070 //      timestamp d1;   //  (t1-t3)     /2/64
Error[108]  : Illegal character (})
                      00071 } wheelSensor;
                      00072 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (volatile wheelSensor shooterLeft)
  0000                00073 extern volatile wheelSensor shooterLeft;
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (volatile wheelSensor shooterRigh)
  0000                00074 extern volatile wheelSensor shooterRight;
                      00075 
                      00076 
Error[108]  : Illegal character (/)
                      00077 //short long's are 24 bit
Error[122]  : Illegal opcode (struct)
                      00078 typedef struct {
Warning[207]: Found label after column 1. (volatile)
Error[122]  : Illegal opcode (short)
                      00079         volatile short long posNow;             //instantaneous position updated via interrupt
Warning[207]: Found label after column 1. (short)
Error[122]  : Illegal opcode (long)
                      00080         short long position;                    //copy of positon at beginning of loop
Warning[207]: Found label after column 1. (short)
Error[122]  : Illegal opcode (long)
                      00081         short long oldPosition;
Warning[207]: Found label after column 1. (short)
Error[122]  : Illegal opcode (long)
                      00082         short long projectedPos;        //where we expect to be at next tick given current Vel.
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (velocity)
                      00083         int velocity;
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (oldVelocity)
                      00084         int oldVelocity;
                      00085 
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (direction)
                      00086         char direction; //direction at last interrupt 0 is fwd, 1 is rev
Error[108]  : Illegal character (/)
                      00087                 //in keeping with sign(velocity)
                      00088 
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (t0)
                      00089         timestamp t0;   //most recent
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (t1)
                      00090         timestamp t1;   //one step earlier
Warning[207]: Found label after column 1. (timestamp)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[122]  : Illegal opcode (t2)
                      00091         timestamp t2;   //two steps earlier
                      00092         
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (d0)
                      00093         timestamp d0;   //  (t0-t2) /2/64
Error[108]  : Illegal character (/)
                      00094 //      timestamp d1;   //  (t1-t3)     /2/64
Error[108]  : Illegal character (})
                      00095 } encoder;
                      00096 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (encoder EncoderRight)
  0000                00097 extern encoder EncoderRight, EncoderLeft;
Error[108]  : Illegal character (/)
  0000                00098 //allocated in user_routines.c
                      00099 
Error[108]  : Illegal character (/)
                      00100 //38.1470        0.9961
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (volatile unsigned int Timer_High)
  0000                00101 extern volatile unsigned int Timer_High_Count;  //high word of timer (should track packet count)
                      00102 
                      00103 
Error[122]  : Illegal opcode (Clock)
                      00104 struct Clock {                          //timer data
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00105         unsigned int cycle;             //      increments at 38.1470 Hz (10MHz/2^18) rollover ~1718sec
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00106         unsigned char cycle38;  //as above; rollover every 38
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00107         unsigned int secondz;   //one secondz = 0.9961 seconds
Error[108]  : Illegal character (})
                      00108 } extern volatile gClock; //allocated in interrupts.c
                      00109 
Error[108]  : Illegal character (/)
                      00110 //use to control printf's for debugging
Error[122]  : Illegal opcode (struct)
                      00111 typedef struct {                        //loopcount data (similar to above)
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (int)
                      00112                 unsigned int count;             //total cycles; rolls over every ~1718sec
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00113                 unsigned char count38;  //rolls over every 38;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00114                 unsigned char secondz;  //rolls over every 256 seconds (4+ minutes)
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (onSecond)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00115                 unsigned onSecond  :1;
Error[108]  : Illegal character (})
                      00116 } SlowLoopTiming;
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (SlowLoopTiming gLoop)
  0000                00117 extern SlowLoopTiming gLoop;    //alloc. in LRTUtilities.c
                      00118 
                      00119 
Error[122]  : Illegal opcode (LimitRange)
                      00120 int LimitRange(long a, int low, int high);;
Error[122]  : Illegal opcode (isWithinRange)
                      00121 char isWithinRange(int a, int b, int range);;
                      00122 
Error[122]  : Illegal opcode (char)
                      00123 unsigned char removeESCDeadband(int pwm);;
Error[122]  : Illegal opcode (addDeadband)
                      00124 char addDeadband(unsigned char pwm);;
Error[108]  : Illegal character (/)
                      00125 //unsigned char addLargeDeadband(unsigned char pwm);;
Error[122]  : Illegal opcode (calibrateInput)
                      00126 void calibrateInput(unsigned char *in, unsigned char lowValue);;
Error[122]  : Illegal opcode (RemoveAllPWMDeadbands)
                      00127 void RemoveAllPWMDeadbands(void);;
Error[122]  : Illegal opcode (AllStop)
                      00128 void AllStop(void);;
                      00129 
Error[122]  : Illegal opcode (UpdateTimers)
                      00130 void UpdateTimers(void);;
                      00131 
Error[122]  : Illegal opcode (PrintTime)
                      00132 void PrintTime(void);;
Error[122]  : Illegal opcode (PrintPWMs)
                      00133 void PrintPWMs(void);;
                      00134 
                      00135 
                      00136 
Error[108]  : Illegal character (/)
                      00137 //******** Macros ****************
                      00138 
                      00139 
                      00140 
                      00141 
Warning[211]: Extraneous arguments on the line.
                      00142 #endif //utilities_h_   NO CODE BELOW THIS LINE
                      00005 #include "controls.h"
Error[108]  : Illegal character (/)
                      00001 /********************************************************************************
Error[108]  : Illegal character (*)
                      00002 * FILE NAME: controls.h <FRC VERSION>
Error[108]  : Illegal character (*)
                      00003 *
Error[108]  : Illegal character (*)
                      00004 * DESCRIPTION: 
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (*)
                      00005 *  This file ...
Error[108]  : Illegal character (*)
                      00006 *
Error[108]  : Illegal character (*)
                      00007 ********************************************************************************/
                      00008 #ifndef controls_h_
                      00009 #define controls_h_
                      00010 
Error[122]  : Illegal opcode (controls)
                      00011 void controls(void);;
Error[122]  : Illegal opcode (allStop)
                      00012 void allStop(void);;
Error[122]  : Illegal opcode (SetGearshiftRelays)
                      00013 void SetGearshiftRelays(void);;
Error[122]  : Illegal opcode (readBallLauncherSpeed)
                      00014 void readBallLauncherSpeed(void);;
Error[122]  : Illegal opcode (ControlBallLauncherSpeed)
                      00015 void ControlBallLauncherSpeed(void);;
Error[122]  : Illegal opcode (ControlLaunchWheelSpeed)
                      00016 void ControlLaunchWheelSpeed(void);     ;     //in wheelsensors.c
                      00017 
Error[122]  : Illegal opcode (threeWaySwitch)
                      00018 char threeWaySwitch(void);;
                      00019 
                      00020 
                      00021 
                      00022 
                      00023 
                      00024 
Error[108]  : Illegal character ({)
                      00025 enum { kLowGear,kHighGear};;
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (char gDriveGear)
  0000                00026 extern char gDriveGear; //set this variable to one of above to shift gears
                      00027 
Error[108]  : Illegal character ({)
                      00028 enum {  kBallLauncherSlow=-1, kBallLauncherOff=0 };;
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (char gBallLauncherSpeed)
  0000                00029 extern char gBallLauncherSpeed; //set this variable to control speed
                      00030 
                      00031 
Error[108]  : Illegal character ({)
                      00032 enum { kFrontLiftActive , kRearLiftActive };;
Error[122]  : Illegal opcode (struct)
                      00033 typedef struct {
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (rear)
                      00034                 char rear;
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (front)
                      00035                 char front;
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (launch)
                      00036                 char launch;
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (current)
                      00037                 char current;   //applied power level
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (char)
                      00038                 unsigned char direction; // 1 > rear; 0 > front
Error[108]  : Illegal character (})
                      00039 } lift;
                      00040 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (lift gLift)
  0000                00041 extern lift gLift;
                      00042 
Error[122]  : Illegal opcode (struct)
                      00043 typedef struct {
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (left)
                      00044                 int left;
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (right)
                      00045                 int right;
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (turn)
                      00046                 int turn;
Warning[207]: Found label after column 1. (int)
Error[122]  : Illegal opcode (fwd)
                      00047                 int fwd;
Error[108]  : Illegal character (})
                      00048 } drive;
                      00049 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (drive gDrive)
  0000                00050 extern drive gDrive;
                      00051 
                      00052 
Error[122]  : Illegal opcode (struct)
                      00053 typedef struct {
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (PassedRear2)
                      00054                 char PassedRear2;
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (PassedRear1)
                      00055                 char PassedRear1;
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (PassedFront1)
                      00056                 char PassedFront1;
Warning[207]: Found label after column 1. (char)
Error[122]  : Illegal opcode (PassedLaunch)
                      00057                 char PassedLaunch;
Error[108]  : Illegal character (})
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058 } sensors;
                      00059 
Warning[205]: Found directive in column 1. (extern)
Error[121]  : Illegal label (sensors gSensors)
  0000                00060 extern sensors gSensors;
                      00061 
Error[122]  : Illegal opcode (updateSensors)
                      00062 void updateSensors(void);;
Error[122]  : Illegal opcode (controls)
                      00063 void controls(void);;
Error[122]  : Illegal opcode (ballLaunchOrQueue)
                      00064 void ballLaunchOrQueue(void);;
Error[122]  : Illegal opcode (doLifts)
                      00065 void doLifts(void);;
Error[108]  : Illegal character (/)
                      00066 //
Error[108]  : Illegal character (/)
                      00067 //void ballQueue(void);;
Error[108]  : Illegal character (/)
                      00068 //void checkDiverter(void);;
Error[108]  : Illegal character (/)
                      00069 //void getDirection (void);;
Error[108]  : Illegal character (/)
                      00070 //void driveLifts (void);;
Error[108]  : Illegal character (/)
                      00071 //void ballShoot(void);;
Error[108]  : Illegal character (/)
                      00072 //void unjamRear (void);;
Error[108]  : Illegal character (/)
                      00073 //void unjamFront (void);;
Error[108]  : Illegal character (/)
                      00074 //void checkKills (void);;
Error[108]  : Illegal character (/)
                      00075 //
                      00076 
Warning[211]: Extraneous arguments on the line.
                      00077 #endif //controls_h_    NO CODE BELOW THIS LINE
Error[105]  : Cannot open file (Include File "stdio.h" not found)
                      00006 #include <stdio.h>
                      00007 
                      00008 #define kMaxSpeed256 200
                      00009 #define kMinSpeed256 20
                      00010 
Error[108]  : Illegal character ({)
                      00011 enum { kForward, kReverse};;
                      00012 
Error[108]  : Illegal character (/)
                      00013 //wheelSensor wheelLeft={0,0}, wheelRight={0,0};;
                      00014 
Error[108]  : Illegal character (/)
                      00015 //void LeftWheelInterrupt(void)
Error[108]  : Illegal character (/)
                      00016 //{     
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character (/)
                      00017 //      wheelLeft.t1.ts = wheelLeft.t0.ts;
Error[108]  : Illegal character (/)
                      00018 //
Error[108]  : Illegal character (/)
                      00019 //      ((char *) &wheelLeft.t0.tsL)[0] = TMR1L;        //must read low byte first
Error[108]  : Illegal character (/)
                      00020 //      ((char *) &wheelLeft.t0.tsL)[1] = TMR1H;        //read in high byte
Error[108]  : Illegal character (/)
                      00021 //      wheelLeft.t0.tsH = gClock.cycle;        //should watch for rollovers
Error[108]  : Illegal character (/)
                      00022 //      wheelLeft.newdata=1;
Error[108]  : Illegal character (/)
                      00023 //}
                      00024 
                      00025 
Error[108]  : Illegal character (/)
                      00026 //need a constant to convert time to max speed 
Error[108]  : Illegal character (/)
                      00027 // at 3000rpm, 
                      00028 
                      00029 #define kMaxRPM 17000.0
                      00030 #define kTicksInOneRPM (60.0/400E-9)
                      00031 #define kTicksAtMaxRPM (kTicksInOneRPM/kMaxRPM)
                      00032 
                      00033 
Error[128]  : Missing argument(s)
                      00034 #define mConvertToSpeed1024()  
                      00035 
Error[108]  : Illegal character (/)
                      00036 //************************************************************************************
Error[122]  : Illegal opcode (long)
                      00037 unsigned long GetLeftWheelPeriod(void)
Error[108]  : Illegal character ({)
                      00038 {
Warning[207]: Found label after column 1. (timestamp)
Error[122]  : Illegal opcode (now)
                      00039         timestamp now;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (long)
                      00040         unsigned long d0 = shooterLeft.t0.ts - shooterLeft.t1.ts;
Warning[207]: Found label after column 1. (unsigned)
Error[122]  : Illegal opcode (long)
                      00041         unsigned long dNow;     // delta time since last pulse
                      00042 
Error[108]  : Illegal character (/)
                      00043         //Check if pulse happened in last  26.2ms loop.
Error[108]  : Illegal character (/)
                      00044         //Use either old data, or current time minus last timestamp,  whichever is greater
Error[113]  : Symbol not previously defined (shooterLeft.newdata)
                      00045         if (shooterLeft.newdata)
                      00046                 shooterLeft.newdata=0;  //reset flag
                      00047         else if (d0 > (unsigned long) (10*kTicksAtMaxRPM))
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Error[108]  : Illegal character ({)
                      00048         {
Error[108]  : Illegal character (/)
                      00049                 //Get the current time.
Error[108]  : Illegal character (()
                      00050                 ((char *) &now.tsL)[0] = TMR0L; //must read low byte first
Error[108]  : Illegal character (()
                      00051                 ((char *) &now.tsL)[1] = TMR0H; //read in high byte
Warning[207]: Found label after column 1. (now.tsH)
Error[113]  : Symbol not previously defined (Timer_High_Count)
  00000000            00052                 now.tsH = Timer_High_Count;     //should watch for rollovers
                      00053 
Warning[207]: Found label after column 1. (dNow)
Error[113]  : Symbol not previously defined (now.ts)
Error[113]  : Symbol not previously defined (shooterLeft.t0.ts)
  00000000            00054                 dNow = now.ts - shooterLeft.t0.ts;
Error[113]  : Symbol not previously defined (d0)
                      00055                 if (dNow > d0)
                      00056                         d0  = dNow;     //use best available estimate (motor must  be slowing)
                      00057         }
                      00058         return d0==0? ~0L: d0;          //return d0, but make sure it is non-zero
                      00059 }
                      00060 //************************************************************************************
                      00061 void ControlLaunchWheelSpeed(void)
                      00062 {
                      00063         long leftLaunchshooterTicks;
                      00064         long speed;
                      00065         long error;
                      00066         long rpm1024=0;
                      00067         int gain;
                      00068         char gainESCCompensation;
                      00069 
                      00070         leftLaunchshooterTicks = GetLeftWheelPeriod();;
                      00071 
                      00072 #define kErrorScale 1024L
                      00073         gain = (int)Get_Analog_Value(rc_ana_in16);;
                      00074         
                      00075         rpm1024 =((unsigned long)kTicksAtMaxRPM*kErrorScale) / leftLaunchshooterTicks;
                      00076 
                      00077         error = gBallLauncherSpeed*(kErrorScale/128)-rpm1024;
                      00078         mLimitRange(error,-256,256);    ;    //limit max size of error to reduce overflows.
                      00079 
                      00080         /*
                      00081          * compensate for non-linearity of the gain of the pulse width modulated ESC + motor
                      00082          * this requires detailed explanation, but generally gain of ESC+motor is proportional
                      00083          * to 1/(pwmM- pwmMin) where 
                      00084          *  pwmMin is Iload/Is * 128 (below which the motor will not turn)
                      00085          *  and pwm in the input, pwm>pwmMin
                      00086          * we can compensate (linearize) the gain by multipling by (input-pwmMin)
                      00087          *
                      00088          * D.Giandomenico
                      00089          */
                      00090         gainESCCompensation = gBallLauncherSpeed-20;    //assumes gBallLauncherSpeed is non-negative
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091         if (gainESCCompensation<=0)
                      00092                 gainESCCompensation=0;  //perhaps we should set this to one? DG
                      00093 
                      00094         
                      00095         speed=error * gain * gainESCCompensation;
                      00096         speed=mDivideByPowerOf2(speed,16);;
                      00097 
                      00098         mLimitRange(speed,0,128);;
                      00099 
                      00100         pwm11 = 127u+speed;
                      00101 
                      00102         if (gLoop.onSecond)
                      00103         {
                      00104                 overlay long rpm;
                      00105                 rpm = ((unsigned long)kTicksInOneRPM) / leftLaunchshooterTicks;
                      00106                 printf("input=%d, gain=%d, shooter RPM=%d, rpm128=%d, error=%d, pwm=%d\r",
                      00107                         (int) gBallLauncherSpeed,(int)gain,(int)rpm,(int)rpm1024, (int)error, (int)speed
                            );;
                      00108         }
                      00109 }
                      00110 
                      00111 #define kMinPWM ((char)(0.15 * 128))
                      00112 
                      00113 /*
                      00114  * motorPWMSpeedXferFunction(speed) returns the pwm needed to operate motor at speedIn
                      00115  *
                      00116  * DC = (Ia/Is) / (1-N/Ns)
                      00117  *
                      00118  * where:
                      00119  * 
                      00120  * DC: duty cycle on {0,100%}
                      00121  * IAvg/Is is the avg current (or ILoad) / the Stall current, typically 10-25%
                      00122  * Ns is the stall speed; N is the speed
                      00123  * Then
                      00124   * 
                      00125  * we need DC on {0,127}
                      00126  * if we put Ia/Is on {0,127}, scale N/Ns on {0,128}
                      00127  * and further multiply top and bottom by 128 we get:
                      00128  * pwm = 128 * (Is/Ia) / (127-speed)
                      00129  */
                      00130 char motorPWMSpeedXferFunction(char speedIn)
                      00131 {
                      00132         char direction = kForward;
                      00133         int pwm;
                      00134         if (speedIn<0)
                      00135         {
                      00136                 direction=kReverse;
                      00137                 speedIn = -speedIn;
                      00138         }       
                      00139         pwm = ((int)(0.15 * 128 * 128))/(128-speedIn); ; //speedIn=0 -> 0.15*128
                      00140 
                      00141 
                      00142         pwm = mLimitRange(pwm,0,127);   ;   //can't deliver more than 100%!
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00143 
                      00144         if (direction==kReverse) pwm = -pwm;
                      00145         return pwm;
                      00146 }
                      00147 
                      00148 
                      00149 
                      00150 unsigned char SpeedFromElevation(char elevation);;
                      00151 /**********************************************
                      00152 camera elevation set at 26 degrees 
                      00153 CameraAngle -127     -26      0      34 127
                      00154 RealAngle     --       0     26      60  -- 
                      00155 Speed        max     max  <-data->  min min
                      00156 **********************************************/
                      00157 
                      00158 #define kMinSpeed 0
                      00159 unsigned char SpeedFromElevation(char elevation)
                      00160 {
                      00161         static struct {
                      00162                 char elevation; //vertical camera pwm when locked
                      00163                 unsigned char speed; //corresponding ball launcher speed for best shot
                      00164         } table[]= {    //data for best shot, ordered low angle to high angle (far to close)
                      00165                 {-127,kMinSpeed},       //first entry
                      00166                 {-127,0},
                      00167                 {-127,0},
                      00168                 { 127,0}                //last entry
                      00169         };;
                      00170         overlay char i;
                      00171         overlay int speed;
                      00172         
                      00173         for (i= sizeof(table)/sizeof(table[0]); ; i>0; i--)
                      00174         {
                      00175                 overlay int deltaElevation = elevation - table[i-1].elevation;
                      00176                 if (deltaElevation < 0)
                      00177                         continue;
                      00178         
                      00179                 //interpolate between table[i-1] and table[i]
                      00180                 speed = deltaElevation * (table[i].speed - table[i-1].speed);;
                      00181                 speed /= table[i].elevation - table[i-1].elevation;
                      00182                 speed += table[i-1].speed;
                      00183         }
                      00184         return speed;
                      00185 
                      00186 }
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

DATA_SIZE                         30
DECLARATIONS                      00000000
EncoderLeft                       00000000
FALSE                             0
HIGH_INT_VECTOR                   0x808
IFI_PWM                           0     /* Standard IFI PWM output generated with Generate_PWM(...) */
INPUT                             1
IN_CCP2                           PORTEbits.RE7
IN_CCP3                           PORTGbits.RG0
IN_CCP4                           PORTGbits.RG3
IN_CCP5                           PORTGbits.RG4
IO_CCP2                           TRISEbits.TRISE7
IO_CCP3                           TRISGbits.TRISG0
IO_CCP4                           TRISGbits.TRISG3
IO_CCP5                           TRISGbits.TRISG4
LOW_INT_VECTOR                    0x818
OUTPUT                            0
OUT_CCP2                          LATEbits.LATE7
OUT_CCP3                          LATGbits.LATG0
OUT_CCP4                          LATGbits.LATG3
OUT_CCP5                          LATGbits.LATG4
OpenUSART                         Open2USART
Pwm1_green                        txdata.LED_byte1.bitselect.bit0
Pwm1_red                          txdata.LED_byte1.bitselect.bit1
Pwm2_green                        txdata.LED_byte1.bitselect.bit2
Pwm2_red                          txdata.LED_byte1.bitselect.bit3
RCREG                             RCREG2
RCSTA                             RCSTA2
RCSTAbits                         RCSTA2bits
RESET_VECTOR                      0x800
RXINTE                            PIE3bits.RC2IE
RXINTF                            PIR3bits.RC2IF
Relay1_green                      txdata.LED_byte1.bitselect.bit5
Relay1_red                        txdata.LED_byte1.bitselect.bit4
Relay2_green                      txdata.LED_byte1.bitselect.bit7
Relay2_red                        txdata.LED_byte1.bitselect.bit6
SIXTEEN_ANALOG                    ADC_16ANA   /* All analog */
SPBRG                             SPBRG2
SPI_TRAILER_SIZE                  2
SPI_XFER_SIZE                     DATA_SIZE + SPI_TRAILER_SIZE
Switch1_LED                       txdata.LED_byte2.bitselect.bit0
Switch2_LED                       txdata.LED_byte2.bitselect.bit1
Switch3_LED                       txdata.LED_byte2.bitselect.bit2
TRUE                              !FALSE
TXINTE                            PIE3bits.TX2IE
TXINTF                            PIR3bits.TX2IF
TXREG                             TXREG2
TXSTA                             TXSTA2
UNCHANGEABLE_DEFINITION_AREA      1
USER_CCP                          1     /* User can use PWM pin as digital I/O or CCP pin. */
User_Byte1                        txdata.user_byte1.allbits
User_Byte2                        txdata.user_byte2.allbits
User_Byte3                        txdata.user_byte3   /* This byte is now used for breaker panel byte 3 */
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

User_Byte4                        txdata.user_byte4   /* This byte is now used for breaker panel byte 4 */
User_Byte5                        txdata.user_byte5   /* This byte is now used for breaker panel byte 5 */
User_Byte6                        txdata.user_byte6   /* This byte is now used for breaker panel byte 6 */
User_Mode_byte                    txdata.LED_byte1.data
__18F8722                         00000001
__ifi_aliases_h_                  
__ifi_default_h_                  
__ifi_utilities_h_                
autonomous_mode                   rxdata.rc_mode_byte.mode.autonomous
backup_voltage                    rxdata.rc_backup_batt*15.64/256
battery_voltage                   rxdata.rc_main_batt*15.64/256
baud_115                          00000021
baud_19                           00000000
baud_38                           00000000
baud_56                           00000000
controls_h_                       
dNow                              00000000
digital_io_01                     TRISBbits.TRISB2
digital_io_02                     TRISBbits.TRISB3
digital_io_03                     TRISBbits.TRISB4
digital_io_04                     TRISBbits.TRISB5
digital_io_05                     TRISBbits.TRISB6
digital_io_06                     TRISBbits.TRISB7
digital_io_07                     TRISHbits.TRISH0
digital_io_08                     TRISHbits.TRISH1
digital_io_09                     TRISHbits.TRISH2
digital_io_10                     TRISHbits.TRISH3
digital_io_11                     TRISJbits.TRISJ1
digital_io_12                     TRISJbits.TRISJ2
digital_io_13                     TRISJbits.TRISJ3
digital_io_14                     TRISCbits.TRISC0
digital_io_15                     TRISJbits.TRISJ4
digital_io_16                     TRISJbits.TRISJ5
digital_io_17                     TRISJbits.TRISJ6
digital_io_18                     TRISJbits.TRISJ7
disabled_mode                     rxdata.rc_mode_byte.mode.disabled
kAxleLengthInch                   28
kEncoderTicksPerFt                81.49
kEncoderTicksPerFt256             kEncoderTicksPerFt*256L //use care to wrap in '()' when dividing!
kMaxRPM                           17000.0
kMaxSpeed256                      200
kMinSpeed256                      20
kNeutral                          127u
kPI                               3.14159
kTicksAtMaxRPM                    (kTicksInOneRPM/kMaxRPM)
kTicksInOneRPM                    (60.0/400E-9)
kTurnTicksPerDegree               (long)kAxleLengthInch*128L*2/(360*6)
kTurnTicksPerDegree256            (long)(kAxleLengthInch*256*128L*2/(360*6)
mAbsDiff                          ((A)>(B)?((A)-(B)):((B)-(A)))
mAbsolute                         ((A)<0?-(A):(A))
mDivideBy128                      mDivideByPowerOf2(AAA,7)
mDivideBy16                       mDivideByPowerOf2(AAA,4)
mDivideBy2                        mDivideByPowerOf2(AAA,1)
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

mDivideBy256                      mDivideByPowerOf2(AAA,8)
mDivideBy32                       mDivideByPowerOf2(AAA,5)
mDivideBy4                        mDivideByPowerOf2(AAA,2)
mDivideBy64                       mDivideByPowerOf2(AAA,6)
mDivideBy8                        mDivideByPowerOf2(AAA,3)
mDivideByPowerOf2                 ((AAA)>=0 ? ((AAA)>>(pwr2)) : -(-(AAA)>>(pwr2)))
mIsPowerOf2                       (0==(((AAA)-1)&(AAA)))
mLimitRange                       do {\
mModPowerOf2                      ((AAA > 0) ? ((1L<<pwr2)-1)&(AAA) : -(((1L<<pwr2)-1)&(-(AAA))))
mSign                             ((A)>0 ? 1 : ((A)<0 ? -1:0))
now.tsH                           00000000
p1_aux                            rxdata.oi_analog13
p1_sw_aux1                        rxdata.oi_swA_byte.bitselect.bit2 /* Aux input,               same as Port4 pin9 */
p1_sw_aux2                        rxdata.oi_swA_byte.bitselect.bit3 /* Aux input,               same as Port4 pin15*/
p1_sw_top                         rxdata.oi_swA_byte.bitselect.bit1 /* Joystick Top Button,     same as Port4 pin8 */
p1_sw_trig                        rxdata.oi_swA_byte.bitselect.bit0 /* Joystick Trigger Button, same as Port4 pin5 */
p1_wheel                          rxdata.oi_analog09
p1_x                              rxdata.oi_analog05
p1_y                              rxdata.oi_analog01
p2_aux                            rxdata.oi_analog14
p2_sw_aux1                        rxdata.oi_swB_byte.bitselect.bit2 /* Aux input*/
p2_sw_aux2                        rxdata.oi_swB_byte.bitselect.bit3 /* Aux input*/
p2_sw_top                         rxdata.oi_swB_byte.bitselect.bit1 /* Joystick Top Button*/
p2_sw_trig                        rxdata.oi_swB_byte.bitselect.bit0 /* Joystick Trigger Button*/
p2_wheel                          rxdata.oi_analog10
p2_x                              rxdata.oi_analog06
p2_y                              rxdata.oi_analog02
p3_aux                            rxdata.oi_analog15
p3_sw_aux1                        rxdata.oi_swA_byte.bitselect.bit6 /* Aux input,               same as Port2 pin9 */
p3_sw_aux2                        rxdata.oi_swA_byte.bitselect.bit7 /* Aux input,               same as Port2 pin15*/
p3_sw_top                         rxdata.oi_swA_byte.bitselect.bit5 /* Joystick Top Button,     same as Port2 pin8 */
p3_sw_trig                        rxdata.oi_swA_byte.bitselect.bit4 /* Joystick Trigger Button, same as Port2 pin5 */
p3_wheel                          rxdata.oi_analog11
p3_x                              rxdata.oi_analog07
p3_y                              rxdata.oi_analog03
p4_aux                            rxdata.oi_analog16
p4_sw_aux1                        rxdata.oi_swB_byte.bitselect.bit6 /* Aux input*/
p4_sw_aux2                        rxdata.oi_swB_byte.bitselect.bit7 /* Aux input*/
p4_sw_top                         rxdata.oi_swB_byte.bitselect.bit5 /* Joystick Top Button*/
p4_sw_trig                        rxdata.oi_swB_byte.bitselect.bit4 /* Joystick Trigger Button*/
p4_wheel                          rxdata.oi_analog12
p4_x                              rxdata.oi_analog08
p4_y                              rxdata.oi_analog04
pwm01                             txdata.rc_pwm01
pwm02                             txdata.rc_pwm02
pwm03                             txdata.rc_pwm03
pwm04                             txdata.rc_pwm04
pwm05                             txdata.rc_pwm05
pwm06                             txdata.rc_pwm06
pwm07                             txdata.rc_pwm07
pwm08                             txdata.rc_pwm08
pwm09                             txdata.rc_pwm09
pwm10                             txdata.rc_pwm10
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

pwm11                             txdata.rc_pwm11
pwm12                             txdata.rc_pwm12
pwm13                             txdata.rc_pwm13
pwm14                             txdata.rc_pwm14
pwm15                             txdata.rc_pwm15
pwm16                             txdata.rc_pwm16
rc_ana_in01                       ADC_CH0
rc_ana_in02                       ADC_CH1
rc_ana_in03                       ADC_CH2
rc_ana_in04                       ADC_CH3
rc_ana_in05                       ADC_CH4
rc_ana_in06                       ADC_CH5
rc_ana_in07                       ADC_CH6
rc_ana_in08                       ADC_CH7
rc_ana_in09                       ADC_CH8
rc_ana_in10                       ADC_CH9
rc_ana_in11                       ADC_CH10
rc_ana_in12                       ADC_CH11
rc_ana_in13                       ADC_CH12
rc_ana_in14                       ADC_CH13
rc_ana_in15                       ADC_CH14
rc_ana_in16                       ADC_CH15
rc_dig_in01                       PORTBbits.RB2   /* external interrupt RB2/INT2      */
rc_dig_in02                       PORTBbits.RB3   /* external interrupt RB3/INT3      */
rc_dig_in03                       PORTBbits.RB4   /* external interrupt-on-change RB4 */
rc_dig_in04                       PORTBbits.RB5   /* external interrupt-on-change RB5 */
rc_dig_in05                       PORTBbits.RB6   /* external interrupt-on-change RB6 */
rc_dig_in06                       PORTBbits.RB7   /* external interrupt-on-change RB7 */
rc_dig_in07                       PORTHbits.RH0
rc_dig_in08                       PORTHbits.RH1
rc_dig_in09                       PORTHbits.RH2
rc_dig_in10                       PORTHbits.RH3
rc_dig_in11                       PORTJbits.RJ1
rc_dig_in12                       PORTJbits.RJ2
rc_dig_in13                       PORTJbits.RJ3
rc_dig_in14                       PORTCbits.RC0
rc_dig_in15                       PORTJbits.RJ4
rc_dig_in16                       PORTJbits.RJ5
rc_dig_in17                       PORTJbits.RJ6
rc_dig_in18                       PORTJbits.RJ7
rc_dig_out01                      LATBbits.LATB2
rc_dig_out02                      LATBbits.LATB3
rc_dig_out03                      LATBbits.LATB4
rc_dig_out04                      LATBbits.LATB5
rc_dig_out05                      LATBbits.LATB6
rc_dig_out06                      LATBbits.LATB7
rc_dig_out07                      LATHbits.LATH0
rc_dig_out08                      LATHbits.LATH1
rc_dig_out09                      LATHbits.LATH2
rc_dig_out10                      LATHbits.LATH3
rc_dig_out11                      LATJbits.LATJ1
rc_dig_out12                      LATJbits.LATJ2
rc_dig_out13                      LATJbits.LATJ3
MPASM 03.90 Released                           WHEELSENSORS.C   4-16-2006  14:13:13         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

rc_dig_out14                      LATCbits.LATC0
rc_dig_out15                      LATJbits.LATJ4
rc_dig_out16                      LATJbits.LATJ5
rc_dig_out17                      LATJbits.LATJ6
rc_dig_out18                      LATJbits.LATJ7
relay1_fwd                        LATEbits.LATE0
relay1_rev                        LATDbits.LATD0
relay2_fwd                        LATEbits.LATE1
relay2_rev                        LATDbits.LATD1
relay3_fwd                        LATEbits.LATE2
relay3_rev                        LATDbits.LATD2
relay4_fwd                        LATEbits.LATE3
relay4_rev                        LATDbits.LATD3
relay5_fwd                        LATEbits.LATE4
relay5_rev                        LATDbits.LATD4
relay6_fwd                        LATEbits.LATE5
relay6_rev                        LATDbits.LATD5
relay7_fwd                        LATEbits.LATE6
relay7_rev                        LATDbits.LATD6
relay8_fwd                        LATJbits.LATJ0
relay8_rev                        LATDbits.LATD7
typedef                           00000000
union                             00000000
usart2_RX                         PORTGbits.RG2
usart2_TX                         LATGbits.LATG1
user_display_mode                 rxdata.rc_mode_byte.mode.user_display
utilities_h_                      

Errors   :   525
Warnings :   139 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

